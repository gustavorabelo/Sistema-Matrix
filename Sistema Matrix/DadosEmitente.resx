<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        c7iMUOr/ALXvnkqfgiwZAAAAAElFTkSuQmCC
</value>
  </data>
</root>