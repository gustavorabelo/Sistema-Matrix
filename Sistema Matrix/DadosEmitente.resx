<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAABaCAYAAAA4qEECAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiIAAC4iAari3ZIAAAAHdElNRQfeAQYRJRONQvntAAAAB3RFWHRBdXRob3IAqa7M
        SAAAAAx0RVh0RGVzY3JpcHRpb24AEwkhIwAAAAp0RVh0Q29weXJpZ2h0AKwPzDoAAAAJdEVYdFNvZnR3
        YXJlAF1w/zoAAAAHdEVYdFNvdXJjZQD1/4PrAAAACHRFWHRDb21tZW50APbMlr8AAAAGdEVYdFRpdGxl
        AKju0icAABabSURBVHhe5V0LkFTVmb4zgDxjEKgVNGpizO6WsdxVN2vpptZkE6OlWeNaqYQtNAgCU0y/
        ZsaZ4VUCLmCBBJUSU0rcuESQhMcw3dXTj5mFGSC85S0QhndghYXAAkLAgJz9vv/e03O7p2emp/vemYbc
        qksPp2+fe893/vO//3MNI0+PYFB1vXvOxm8YpZHnjNGhlwsr4nN6T1q+1PCF/9sYGVxplMVqe09ascio
        iL1pFIX8hWNqn7pz1uqv5ulw8uOxHgvu6mFU1j1k+GqKDX/0V4YntMHwhI8D4D8bxTXK8MaV4YkpoyiC
        E//X52j8n+1enMVhhesv43dHDW/NKsMX+YVREhuOifqmUqowP0baCU9x66vrbjFKa58TYL2RfTiVUbZK
        GYEGAFarjOEA7sVqZQzD+RLO0SEAijY/gA7gWn7y/0Vo5/e8jte/hPbiOlyzUhmlOD01VwH6DqMkPrtg
        fP3j970X79kJw+2EW1Ys/2fDH/klgP0fo7TeBGRkFCAtU8YIAFUWUwNmrFTfnbdZBWp2q3fWHVLLPjmu
        Vh04rbYcPac+OX5e7T5xXu3E5+YjZ1X9/lNqyY5P1ZtrDqrRoV3qkfc3qb5TMVklmIzh6JPgF4HiSzGJ
        JcsxOTUHjED8510mrHigE0bv7i2nNTR0M8bUPm/4or8z/KBWDnoEKG9olQK7UIPeWK284d0quOu4OnL2
        ElZ6rsc1te/URbVo+zE1vGqnGjAdk1kMyuf9RmFSy1YD8OhVrKYwJvaH7o6+A3oX3lge/5nhi20zyjBY
        HyhqKKisKKhun7VaTVmxTyg07XHtmrqWxYkfpe1uE6i/PLJH9Z8GaufKIaWTTZWswGesAYTwVAdA4vwt
        CiprHzf8sbUCsAc88wVQE5bzsx9tEzaQfGQHaqYTkYp8ePcJ9ShYDASnSeV+sDACXlob6na9sBSoYAPB
        A//TCABcPx7+haUC8Mhln8hybjrcBbelSbCDTip/dsFWAE62gpVWwlUXvwxt5bX7xuSz0KTO648fMcrX
        mFoAWMRzoOC9Jy/Y8O0cgFOBt7OYDYfPqofmboTGQoEMKq/A8/vjW4zymn9yfq3n0GMwGOxqlMbeMEpB
        wR4IO1DxoNdXqbrGUwmAM13mHX2dHfCPth1TfSZCjnAVBsBO/PE/YzW+nAM0zv2055j47WAVy42KtVCn
        gqLvlkf35B0FtzWBSplC9MylK2rwb7eb1D0SmlEFNJSS2PxbpjX0cg619vbkCz9oBGr3i7oEKiA1XA9U
        3BromkLmbTmqCkst/Z5E5IutFaLq8KMs9F0IjjOyxJ5for75i/Xq+IXP5Tnbop58/15T904YRgNegwr4
        PFgJrVZ/rLFLWfRvOg5rX/UTYBcXDR/VtqVqyOLtec+Ls5lcDurc5Svq/vc2CDEZJQA9EP9D14rgfe6D
        7QclB2ovitB7cakqhRGgj2wGk++/0WN7ev6WJrD98T9AJfyGe2B7Qg9AEv+f4QUlA+RxtY03NMiaCPQg
        qaoKGyFl+6ON/WgzOH30mhi9DZ0fFp48dKkqS2gW+aEXu70yNNhPfggDh2yECoAvskZcvE4dTzaobnD+
        rBaBgJsMWbLjL4KSmxk5IuiVuvfd9aauTW3EH57nFM4G/L6zpVN0fu+7G/4iQbazkbPQtftOwcqma7cc
        lB1AwCLnoyTyb+I3hjHSG3ryqYs3hgqXC6shpe349JwZgBiFE/6RbuOif5811n3G194KB/1xw4NQEiw+
        7XXL5SFvlN8S7Pc3HYFPB94/ulu94Y+FxWZ1eEMfytIAyxhbu9cVYyTVhXm9TIT2kTw1H8JR82tfaEK7
        cS4oj3xfQj/wwg2Ek960lpzVMNjfYURUioK71LDFO1R0z0lXJtOtyePDkpXeNA42Bf0i3sifuk6o/3rG
        YIs3zhPaKv7k0UG15uAZVwBgp+sOnRGd3PjRQlUc2u3KfdwCmv3y+ECzEGpl3tDijIE2SsIvapbxk0Wm
        ee3Gw7LfjXC+SzwPhkB51B325MazJ7QQC+yvzllnhcdA3ZWxR9sEe9CsYA+jONhoFDOIGk0ES9142BsB
        aE3VVBSMUXAT02r0hGJtAg2VZagYJmDwHkSm3aJm/YDXO0Xb9euHf4U4JHVrRvoD0UdaBBugFmAZbxZf
        RllUHT1nhv6douZUDcPUR88nWMfYeJPvxH6tU/d3sx8+75qDFlUzncIT+k3LVF0S+Y4RYEpAlRoMLcBJ
        kDnIM5c+V42IHzJIy/PAmUvI5ThhAo0VNAIB3INo09/zWk62mwA51bdW975GXj0c4/HUXCqsiN2VHmxP
        +NdGCWYDxgmzgJwEmn1Nrd9vpnAxcqFPZhQx3YvtSKbhSkp8hwn4+jvrE8TtFChu9cMHXbD1qGnEMEDt
        i4xrBnS/icv7g7LOMAp8x1trzcFlkcDS0iDYHY0eYwg8XyMRIefJRJaRZpxRTgoTabPOF5aoW2dSh9eP
        46we7zTgfMpLV66qHq+AK1CZKA7umDt3bpdksEtjgyXZ5cUqNXP1AUepWQu+CXWNZsIKWQUB5d/DIDwI
        MtsIsLThZBs+b3tjzXUDtB7n0KU7zTwRX0wVMks26fCEPxKbHY6SA6fNRBcnZ5z9JYBG8uHtb65Rk1fs
        Vz9mxJmUjLb+yJGbhDSxl8CrzSyipdcl0LWNJ02ioc/aXzMxgfPNFYt7g4KOGSMi6q7ZFttw3Ny2AQ3j
        hJmfPNYdgsFC9oG2J+A34MFER0nJhYDMlaK166DFTwfZo6boJvYB7c0T+l0TQZeGH4WrT3TAypg71lkS
        RQPUkdWfCKgrqehbQH//11ukbT9WlHNAJzhPi384uXI12I9jLMYwssTwZ30nrrzNBNsfelmMFJB7fK87
        jp0koHGfXvBtfwuJhoPAg0XjQFu3cXXqIbTdiVUlPBvyIluKtnifevzDLWrQjFXST+o5cNpK9d76w66w
        ydlrD5nGS4DZqjVWanBxeKHhb1AFlXF18sJlx2/cGcLQ0lOgAWD5Dl5sCtjU88eLlB/J7m7Io43I5xNi
        ofGS4NPFoW1GUVwSwvUDurGcEsJQq3LMyKf2YVfv7G05aB16HDdPZXTI0mykBIOpXtY9oeG4wSp57/PI
        B+lG96kPFO0FIQ+ahShuceg0rZlnkMKql5yrQFPLgGHSZ/IK1XUsHkYDD+OlN9puGg8qzFG9awY0Mlt7
        gl1Rs5F78hlcA9p0n1KzMkahrMMTXmsMnFn/IAb1BR384+LuCMJmrIPZTVYkvZomOIUh2h79YJO6Ci2A
        abS5CsMkoEnFoOrfbv9Umitje0R1dAtoPd6nGX2hOV4c2mdA/fgZ6jnQUK0+2HzEBX7VVOowpX6faZBA
        6xiFqAqP1QgqaK2DgovHgTOW1oHrvvKmVjf1YmvbOrSrF31ZSkGhBKBr9pyQryYth+HE8BOqECYt32e7
        vO2+M13p7LQEWVxSwuEJ/a+B/N+pUscHqoq5oHFc+vyqOPc3HTmnhqFwRwYNbYKq3JZj59RblM5cxmj7
        ayRKbkblFfOUxWBBW//XVspv1yMSc+zc5YyMqN0nLqgqVGpVo/hIhCF5M2QBQ2ZLdh5X30HFlykYlylS
        HUstQlhZ5KuZAtnWdQSalWKSkA8Vz+g+oe43hhRGhhUlJY+2Osn0e/bFYiApRaMKRymsBR//plFiFmI2
        meEE2N7G79gGUF4BJbb1fPw+QEoavMjMcQZvTvRPwFMFMAUjJpT33H3crEzIdHytXcd+FpBgeM8iFJpi
        EKukEhWmN+v3nLqR5lOsBxRA5YYYNAGXE3+Tknmma9MePX0d2IjO9WtrgOUwuoQ1sF89ifozXdsIPIM/
        ovZgJTg1fvZTg5UiWlVR8KqBgW43RgEIuC2d9nEkKJpVrhR4uso1ldL4MJwIgq4B4fXWkpc28Haqh20B
        we8rCDSFnXZUkWK1o0om0GRVcvKevBcIzWmgl+87ZfY9KnjNwCB2CdBQtw7B6d7WQNqzrJKAxpItqIip
        peCRNUgroGonyxgDpUCK7T2lHmZJmmVUkIezrTIGwcXlDQptN9CY0L+auUpNX3lAhK/2GhZWxtQU+Man
        New3VT1qJS4AvYJAy4rFiX9grHQARWMwN42vlYnkMRB+ZtFAACJTDngUEwymxQLUMZaqyVINWX7ZAA2t
        4tmF26Tv/YjoaAHbZ3J94jlQm2LWQLoAtDx7gqK94QbNo3e5wKNFGJJ1AGhaSsygp8I3AP4HWboAmryM
        x9Al0ErIW7HsPVaOxyLovgI0JmAGKDOTYzJcrWY/VeqHlhEmzyFCtUqMIn1I3Tgn3AWgqc3Is48Cj+75
        St0CrXVsOOxsokwS6+ANMdBek1bIQCVsZWkEdCaRylhwbwpMnOUxaRMzlrx9xDJ1B5xNI6t3ib+6pZPf
        i0WG60lN/P29KI2gQylhgQJUhsjugTopGhFlgQtAz2dYC/aJqXX4wq9qPdrplKz0wtA0HpLULk4C2+xh
        Lf5tV8Uo2ChExaJr4+R1vD4pamP5OzpQGM5arfXo0HkIw+ohhodbLlRLdqRrwlC0DtO/IEBRSGi9mgKQ
        bQRcA0QqY5sOdaWqaQl1LaXP1Ot4X7Io7VjSQGtPHp/JJa2DnkGxDIvDJ4z+U+r+DkvqKi0Ypz1ZzVgH
        dNVHkGTy2H/BMgNrMFW+oLrr7XViKfZ5FezDCs5+GbyTJjkDxQldOxVEyQyKqG9/sNnskxF0u4qIv7uM
        iUsfspWEdl5BZpC9CIthjjPv6SDr0KkHT7AMgxu8FIf2Gj0mLOyOB/gjnR9MQbVI2jHryC4M7VoHo9ta
        69BJlDSRtdZBXZgHVTxT6U9jfIBFYF+lhGDrB0d+EuVi9TxtCUNJ1EkrDDG5DgtDXadIt7PpvdPhLE/N
        ZvqjqXJZSLsOtF29W4+4oah3iCO2qN5lAjT8IkmsxqbeMSmno9Q7joXlF6Kj+zCRnpr5ZijLG/6QERbs
        uKU+Pe9chCWJdZDnwvpkPh+9WqJNmKqPrCSazYOQhy0CDyeXO9u+Nw+xNzs7sLMPGjLlUeVDn/RvkE0k
        nPq8DnyZVPXehsOmJ40+FPRdiOveWnNIMdwkz+GwwcJxr6NXks9gRljGm0AHavwSM8TAI5ZO2x4LsLWk
        mQTr6AxhmGSCd5zWQaBnUuOQmCGSacprnhScC0rj/yg+aSR96EpYV4DmDBNwUqKdFYi/wXI62cNabGuJ
        mpMoO02fdieSdl7Zf2Nvc1jrINAinCUKHjo3YDpqgXg8ZoazDhsjIyKJneLTzfRoUhilPI0EuyuUlmMJ
        JppePg0G/2Ybv2tJtWO77pP92t2wqa5XCkJ7P/y/bnMQaI754udX1E0TmNMBavaE6pMzlbwoTOTWaBiY
        3jEmV6pOAhp8kDyU0r8RgkkiH9RlQbUsTdiHXI5nFmwzdWfovUOQzcq2OQwMtKh1VCv40xVdB+xTrEvy
        eA0o+rl/7ga1DfdcsNUKJgyvkt9wa7etCDww7UH0bIfUO4454R6VTKXI2JTcO2zTU2ra/cz6dMJwSQW6
        LafSaJt6V2k5lWrbo95R67AbJtA6foT6bR6NJ9NrHTLhDqp3vNdPmObG3DtP5FqX8bX3JwHdfVrDl5H9
        eJL70TmVdpCOorcdO48Vk0zR7288ItlJjMLLoEFh/w6K3n/6knq7NYqGP4PUSYG7B7nU4npNoWgGfE9g
        H5EIXLPCKkDRPZHtyWqwowiNyW8cAprjTaQZcGc0T+hjNBU0z5H2hn4p6gisNScqsdLyaFiHwqft/JQO
        JvLtZjyaVakZ8Oh0feoIDX5fAP+z5Fwn+DYAp2XKk+BT6DrAOjheEo2wIildjpalTUQvGIe6C9ZfgOyf
        sZZcLny6GdCdonVAI9E513ZNhG2a9zsgDLXZfftbMOvF7A5f6JXIuUsHtye4VrJrHEjfbQa0a04ly5uX
        qgom8rBNAZugaHkO22+cABqDTQQpyBWK29r1IBD+qSSkQ5AMqzIzPrOl6iSgLcuQVlwFEljsliGd8+MR
        D0yyDOF7ZhudTS06lQgQln8gslv2D2lmGeKe/aY3qPHYwOWnqJdMJMDjN7QU+ZtC5BuKAM2BdWhq/lvs
        /CDeOl/0GnYWa32TWUw2q2Z3SmUWbr7vVPaR4Uy1joSvo7VQVh77OjhOZuEKK5KKrGB1+iKh1NayJqp+
        0vLoZUPVrQHtnPduuaw6Hv3SqHfPfLRVvmOEu8l7V5/4Ta6hLE3Nkn48DCvMH/+icGz8wYyAxlMUQgNY
        K9v6QCLXoVQgGxaSBDRnG8YQc6LpP7b7oxmiEn80VS2rUOhmbDzCNjNREANIZx1a/mgWUlKNa+aPRl8s
        3Pke+rn7HZSlaWEMi5N+cfkNtZEcQlkco6ig5Pk0UIqD7dyRhvty+sm/gkIpV66aOXTtoeyWhaGVT5GI
        sFghqnQRFrsBkg7shIC1+rRfYxeGqXkdEunJLa+D42MdJOoJoRJTPY2c61IZviMjak4uIAq9K/VyKEPL
        ply5GdCt+Sw687sstA7NMh7hqpD9OoBTSSjQfpDxC2gBfWEwHBbBiGXYnuCtZoJS+KMzlToTzNbubQF9
        ytqJMsHAWykk4jVvMImRq4LvEvCGV6EpjRWYKfSB8A/Ep/pSSHVHxKCl+vB0O5GzBHkuakTE4svE3dlZ
        E0H2AwvRD9WT7xNgaXTz8TSl9BJk2WdELFmwDV/sM2e20vSHp5q7hFUh8rFGksU1v9bxMf6f/op31x1W
        TyMoeYt+oUGq77mzwMzkvjRqKBhh0oswRnrvbFBt0v7XGCejUL1YHcucDdlSHznmThyyJHzhqNjv2PdO
        1wPqJVaFfLoHuH8nfRh8WPIsydNoIaiayaA76xqpELNySqyqAPpb7kExPSsGuLUPia1p37vQ205gnOij
        9/QN/WDx7Jbt2QE26wRJ2bTqJOZGcHURTmeB5NZ9CbyVi9Kd9TX0EFJJ8EdiILaUWm8HYBc+5I8dl72W
        AOpt1HFT023dGmw+9EteTpAZX/VFt9w8DsqCW0dhIPQtc99ogE3dNJ1pnA+guPIMAJo8ORD7fY8Jwa+4
        hXFTv95lKGmOnTZKYDnaSxdcGVyaxJnOuo+8Yir++/6v1X3NfZD1HcqC/wDLEa9hYqpVCyZyZwHixn1l
        o5Polj6Ts7H8cpyWLmXYrNoX2y6CYXRKlNmNwXZGn3z7HFXbQDTWe0y8X46QZf/zL70auQUCslrA9jBc
        dKNQN8bBHR+EJ8fnyKaLeXGURCfigb4Qvt0ZlOf0PcUQiZ+XdyLm3VER+xeAvUscLNcldVtUzNWJF5V1
        Ka9JThXIJ8DvmbH5S0Zp/OcQlFdk2aUWZzpNeU71R15My9cXO4sMqYqioqLr462eBWOQzxeIR4SVMDEn
        XwEnwCabIBXP61oezXy33HyicLyC9F9B3SvlNXbyyj1rnzunKDHbfsjaxMIDwN5oyKiMfDuvcMv6Ycqw
        3Q3fiOmNXJUl6ofPoKOpnNQrabS4vyeCF/bE5uPFlvn1hresAU794RjUzARiMwB4o7zzUDJ6mHXpBqUz
        YxSUy9Vk8l+Gm7bivuMKxq6427Ex5XNHdy3c1t2oqMVeqLHXYXF9jNdSXxZeTkD4yYwp5myTCtuifH4v
        r7UGkFwpuh/KB2/kM/S/GgbHJNzv4dyiIPmMaKbPVlaLl63XDkbY63W86bga+3oC/NAR5JicweefZIeA
        9Pz4Cr6/iMn4I74/CGDX47eLwKb+AwWizyJ5885MH8HN6/4fte+eSpNtqYMAAAAASUVORK5CYII=
</value>
  </data>
</root>